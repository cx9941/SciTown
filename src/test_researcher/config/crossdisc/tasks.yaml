# Step 1: 子任务拆解（协调专家）
Decompose_Problem_Into_Subtasks:
  description: >
    请委派一位学科专家，请根据用户输入的研究问题或课题：{query}，对其进行逻辑性拆解，提炼出3-5个关键子问题或子任务，用中文表达。
    每个子任务应具有明确的研究目标，能够独立开展研究，但整体上需保持逻辑关联，共同支撑总问题的解决。
  expected_output: >
    针对某一子任务的主学科视角分析，一份结构化列表，内容为子问题编号 + 子问题，用中文回答。
  # agent: Biology_export

# Step 2: 主学科专家分析（支持多个执行，每个由 manager_llm 指派）
Subtask_MultiDomain_Expert_Analysis:
  description: >
    请不同的学科专家，基于所在学科的专业知识，选择高度相关的多个子问题，进行全面深入的分析和解决，用中文回答。
    给出的解决方案应足够专业，尽量具体、具备逻辑性。要求每个学科专家都进行回答，并且所有专家回答的问题集合能覆盖所有子问题。
    当前主问题为：{query}
  context:
    - Decompose_Problem_Into_Subtasks
  expected_output: >
    针对每个子任务的学科视角分析，可在整个子任务分析阶段多轮调用、由多个专家参与，所有专家回答的问题集合能覆盖所有子问题，用中文回答。
  # 由 manager 决定 agent，允许多轮并行执行

# Step 3: 跨学科补充（支持多个执行，每个由 manager 指派非主学科专家）
CrossDomain_Support_Expansion:
  description: >
    请不同的学科专家，基于所在学科的专业知识，选择相关的多个子问题，从辅助学科的角度补充该子任务的解决方法，提供新的思维方式、潜在联系，用中文回答。
    回答应突出你学科的独特贡献以及与已知视角之间的互补关系。
    当前主问题为：{query}
  context:
    - Decompose_Problem_Into_Subtasks
    - Subtask_MultiDomain_Expert_Analysis
  expected_output: >
    一份基于非主学科的补充性分析，鼓励提供新的变量、机制、模型或可落地路径，用中文回答。
  # 同样不指定 agent，由 manager 灵活调度，支持多轮补充

# Step 4: 最终解决方案整合（由协调专家完成）
Final_Solution_Proposal:
  description: >
    请委派一位和课题最相关的学科专家，整合所有子任务的小结与分析结果，构建一个系统性的、具备操作性的科学解决方案，最终撰写一份项目申请书，包括“摘要”、“研究背景和意义”、“研究内容”、 “拟解决的科学问题”、 “拟提出的技术路线”、“预期成果”，要求详细介绍“拟提出的技术路线”，技术路线应该对应上研究内容的每个点，要求体现专业性和综合性，用中文回答。
    当前主问题为：{query}
  context:
    - Decompose_Problem_Into_Subtasks
    - Subtask_MultiDomain_Expert_Analysis
    - CrossDomain_Support_Expansion
  expected_output: >
    一份结构化方案文档，遵守项目申请书的格式，技术路线应该对应上研究内容的每个点，要求体现专业性和综合性，用中文回答。